{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.6"},"colab":{"name":"Copy of allthenews-w2v.ipynb","provenance":[{"file_id":"1F4b3PxnaolNtabUcDNRBEXkaUMMoUFTm","timestamp":1586055114001}],"collapsed_sections":[],"machine_shape":"hm"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"os8HZJqnaRbJ","colab_type":"code","outputId":"473e0515-875a-4660-b768-08f17d73b376","executionInfo":{"status":"ok","timestamp":1587946243668,"user_tz":420,"elapsed":25093,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":122}},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":6,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"B_xDNfZdMAdS","colab_type":"code","colab":{}},"source":["!pip install -U -q kaggle\n","!mkdir -p .kaggle"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ZMTWstruMAlv","colab_type":"code","colab":{}},"source":["import json\n","\n","token = {\"username\":\"ruthranchandrasekar\",\"key\":\"e969db0314e4da42b6d23f68a449fb78\"}\n","\n","with open('/content/.kaggle/kaggle.json', 'w') as file:\n","    json.dump(token, file)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"KtvblSXHMAou","colab_type":"code","colab":{}},"source":["!cp /content/.kaggle/kaggle.json ~/.kaggle/kaggle.json"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6O-FmE_tNlL8","colab_type":"code","outputId":"22ce6242-c5e7-4910-d674-afe64c04983c","executionInfo":{"status":"ok","timestamp":1587946258682,"user_tz":420,"elapsed":2019,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["!kaggle config set -n path -v{/content}\n","#!chmod 600 /root/.kaggle/kaggle.json"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Warning: Your Kaggle API key is readable by other users on this system! To fix this, you can run 'chmod 600 /root/.kaggle/kaggle.json'\n","- path is now set to: {/content}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"SMJAlHBGNlPU","colab_type":"code","outputId":"ff3ca942-418e-46bb-d48d-93b69f584105","executionInfo":{"status":"ok","timestamp":1587946263066,"user_tz":420,"elapsed":3955,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["!kaggle datasets download -d snapcrack/all-the-news -p /content"],"execution_count":13,"outputs":[{"output_type":"stream","text":["Warning: Your Kaggle API key is readable by other users on this system! To fix this, you can run 'chmod 600 /root/.kaggle/kaggle.json'\n","Downloading all-the-news.zip to /content\n"," 96% 233M/244M [00:01<00:00, 126MB/s]\n","100% 244M/244M [00:02<00:00, 120MB/s]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NfdRwkx1vyOv","colab_type":"code","outputId":"fefe28cd-3427-4c7b-fd73-1efbca8df6eb","executionInfo":{"status":"ok","timestamp":1587946263068,"user_tz":420,"elapsed":2736,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["%cd /content/"],"execution_count":14,"outputs":[{"output_type":"stream","text":["/content\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uk0q3sc4Ts7D","colab_type":"code","outputId":"e05f071b-34d6-4c5d-9097-bcf94bd9c023","executionInfo":{"status":"ok","timestamp":1587946270878,"user_tz":420,"elapsed":9182,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":85}},"source":["!unzip /content/all-the-news.zip -d /content/"],"execution_count":15,"outputs":[{"output_type":"stream","text":["Archive:  /content/all-the-news.zip\n","  inflating: /content/articles1.csv  \n","  inflating: /content/articles2.csv  \n","  inflating: /content/articles3.csv  \n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"50-Q01psTWIE","colab_type":"text"},"source":["## Initialisations\n"]},{"cell_type":"code","metadata":{"id":"m_ti7cFutE5V","colab_type":"code","colab":{}},"source":["# All our modules \n","\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"vvZSFh1lSXtt","colab_type":"code","outputId":"3c670cef-83c7-453f-e114-7ffec300becc","executionInfo":{"status":"ok","timestamp":1587946271010,"user_tz":420,"elapsed":5539,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["import nltk\n","nltk.download('wordnet')\n","nltk.download('stopwords')"],"execution_count":17,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n","[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"uKS8GPmDMTe3","colab_type":"code","colab":{}},"source":["# Functions for presprocessing data\n","import nltk\n","from nltk.corpus import stopwords\n","from nltk.tokenize import RegexpTokenizer\n","from nltk.stem import WordNetLemmatizer\n","from nltk.stem.porter import PorterStemmer\n","from bs4 import BeautifulSoup\n","import string\n","\n","tokenizer = RegexpTokenizer(r'\\w+') \n","\n","def remove_punctuation(text):\n","    no_punct = \"\".join([c for c in text if c not in set('!\"#$%&\\'—()*+’,-.”“/:;<=>?@[\\]^_`{|}~')])#string.punctuation])\n","    return no_punct\n","\n","def remove_stopwords(text):\n","    words = \" \".join([w for w in text.split() if w not in set(stopwords.words('english'))])\n","    return words\n","\n","def word_lemmatizer(text):\n","    lemmatizer = WordNetLemmatizer()\n","    lem_text = [lemmatizer.lemmatize(i) for i in text.split()]\n","    return lem_text\n","\n","def word_stemmer(text):\n","    stemmer = PorterStemmer()\n","    stem_text = [stemmer.stem(i) for i in text]\n","    return stem_text\n","\n","def remove_html(text):\n","    soup = BeautifulSoup(text,'lxml')\n","    html_free = soup.get_text()\n","    return html_free\n","\n","# Ref:= \"https://towardsdatascience.com/nlp-for-beginners-cleaning-preprocessing-text-data-ae8e306bef0f\""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"G6f5AZQ4qW04","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"373226cb-5471-4d2f-ed06-0526ceab3504","executionInfo":{"status":"ok","timestamp":1587928103217,"user_tz":420,"elapsed":16372,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["print(string.punctuation)"],"execution_count":17,"outputs":[{"output_type":"stream","text":["!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"md-i8weCMAu3","colab_type":"code","colab":{}},"source":["# Merging all the datasets together\n","d1 = pd.read_csv('articles1.csv', encoding = 'utf-8')\n","d2 = pd.read_csv('articles2.csv', encoding = 'utf-8')\n","d3 = pd.read_csv('articles3.csv', encoding = 'utf-8')\n","df = pd.concat([d1, d2, d3])\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"OOBMaI-wjW4I","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":306},"outputId":"085d477a-23a4-4f84-b80f-20314f323444","executionInfo":{"status":"ok","timestamp":1587859138000,"user_tz":420,"elapsed":385,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["df.head()"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>id</th>\n","      <th>title</th>\n","      <th>publication</th>\n","      <th>author</th>\n","      <th>date</th>\n","      <th>year</th>\n","      <th>month</th>\n","      <th>url</th>\n","      <th>content</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>17283</td>\n","      <td>House Republicans Fret About Winning Their Hea...</td>\n","      <td>New York Times</td>\n","      <td>Carl Hulse</td>\n","      <td>2016-12-31</td>\n","      <td>2016.0</td>\n","      <td>12.0</td>\n","      <td>NaN</td>\n","      <td>WASHINGTON  —   Congressional Republicans have...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>17284</td>\n","      <td>Rift Between Officers and Residents as Killing...</td>\n","      <td>New York Times</td>\n","      <td>Benjamin Mueller and Al Baker</td>\n","      <td>2017-06-19</td>\n","      <td>2017.0</td>\n","      <td>6.0</td>\n","      <td>NaN</td>\n","      <td>After the bullet shells get counted, the blood...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>17285</td>\n","      <td>Tyrus Wong, ‘Bambi’ Artist Thwarted by Racial ...</td>\n","      <td>New York Times</td>\n","      <td>Margalit Fox</td>\n","      <td>2017-01-06</td>\n","      <td>2017.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>When Walt Disney’s “Bambi” opened in 1942, cri...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>17286</td>\n","      <td>Among Deaths in 2016, a Heavy Toll in Pop Musi...</td>\n","      <td>New York Times</td>\n","      <td>William McDonald</td>\n","      <td>2017-04-10</td>\n","      <td>2017.0</td>\n","      <td>4.0</td>\n","      <td>NaN</td>\n","      <td>Death may be the great equalizer, but it isn’t...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>17287</td>\n","      <td>Kim Jong-un Says North Korea Is Preparing to T...</td>\n","      <td>New York Times</td>\n","      <td>Choe Sang-Hun</td>\n","      <td>2017-01-02</td>\n","      <td>2017.0</td>\n","      <td>1.0</td>\n","      <td>NaN</td>\n","      <td>SEOUL, South Korea  —   North Korea’s leader, ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Unnamed: 0     id  ...  url                                            content\n","0           0  17283  ...  NaN  WASHINGTON  —   Congressional Republicans have...\n","1           1  17284  ...  NaN  After the bullet shells get counted, the blood...\n","2           2  17285  ...  NaN  When Walt Disney’s “Bambi” opened in 1942, cri...\n","3           3  17286  ...  NaN  Death may be the great equalizer, but it isn’t...\n","4           4  17287  ...  NaN  SEOUL, South Korea  —   North Korea’s leader, ...\n","\n","[5 rows x 10 columns]"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"vgVA5rme-LpN","colab_type":"code","outputId":"11946e69-67a1-4031-ebfb-02bf8df60219","executionInfo":{"status":"ok","timestamp":1587946279827,"user_tz":420,"elapsed":6231,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["sources = set(df.publication.unique())\n","len(sources)"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["15"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"xshoYYdSilur","colab_type":"code","outputId":"32cb312f-3fbf-4908-dd91-24d355aac87a","executionInfo":{"status":"ok","timestamp":1587946279970,"user_tz":420,"elapsed":5390,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":272}},"source":["data = {}\n","for i in sources:\n","  data[i] = df[df['publication'] == i]['content']\n","lst = [(k, len(v)) for (k, v) in data.items()]\n","lst"],"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('New York Times', 7803),\n"," ('Vox', 4947),\n"," ('NPR', 11992),\n"," ('Buzzfeed News', 4854),\n"," ('New York Post', 17493),\n"," ('Reuters', 10710),\n"," ('Business Insider', 6757),\n"," ('Washington Post', 11114),\n"," ('Guardian', 8681),\n"," ('Breitbart', 23781),\n"," ('National Review', 6203),\n"," ('Fox News', 4354),\n"," ('CNN', 11488),\n"," ('Atlantic', 7179),\n"," ('Talking Points Memo', 5214)]"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"xCz-zpQtUnl5","colab_type":"code","colab":{}},"source":["# Predefine sources that are Leftist, Centric and Rightist\n","import random\n","num = 12000\n","final = {}\n","final['Left'] = random.sample(list(pd.concat([data['Buzzfeed News'], data['Talking Points Memo'], data['Vox'], data['Washington Post'], data['Business Insider'], data['CNN'], data['Guardian'], data['New York Times']])), num)\n","final['Right'] = random.sample(list(pd.concat([data['National Review'], data['New York Post'], data['Breitbart'], data['Fox News']])), num)\n","final['Center'] = random.sample(list(pd.concat([data['Reuters'], data['NPR'], data['Atlantic']])), num)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"WpQRBxgB7vue","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"d9a36461-be1c-4d5c-c737-78facb06afa6","executionInfo":{"status":"ok","timestamp":1587946297991,"user_tz":420,"elapsed":10559,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["import tensorflow as tf \n","tf.test.gpu_device_name()"],"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/device:GPU:0'"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"vzjnii7JG45R","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":54},"outputId":"67661e99-a700-42ef-adc8-f7134e0693ec","executionInfo":{"status":"ok","timestamp":1587932056244,"user_tz":420,"elapsed":1448,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["final['Left'][0]"],"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["' Federal prosecutors are declining to prosecute a former   U. S. diplomat who was investigated by the FBI on suspicion of providing secrets to the Pakistani government, according to U. S. law enforcement officials. The diplomat, Robin L. Raphel, was at the center of a counterintelligence investigation, which became public after agents raided her Washington home in 2014. FBI agents found classified information in the search, but the information was years old, according to a former U. S. law enforcement official familiar with the investigation. The officials spoke on condition of anonymity to discuss the matter.  [Robin Raphel, the State Department veteran, caught in a Pakistan intrigue]  At the time of the raid, Raphel had retired from the Foreign Service but was working for the State Department. The State Department declined to renew her contract and her security clearances were pulled, impeding her ability to find other work. Raphel was among the U. S. government’s most senior advisers on Pakistan and South Asian issues. She is a former assistant secretary of state for South Asia and a former ambassador to Tunisia. Former and current U. S. law enforcement officials were skeptical the Justice Department would bring charges against her because of what happened in the case of former CIA director and retired   general David H. Petraeus.  In that case, Petraeus provided his biographer with eight notebooks containing highly classified information, but pleaded guilty to a misdemeanor charge of mishandling classified information under a deal with the Justice Department. Amy Jeffress, Raphel’s lawyer and a former senior Justice Department official, refused to make a deal, insisting her client not be charged with any crime, according to a report in The New York Times. Jeffress declined to comment. A Justice Department spokesman also declined to comment    '"]},"metadata":{"tags":[]},"execution_count":52}]},{"cell_type":"code","metadata":{"id":"joUeBn5hkEZI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":272},"outputId":"7291ebe7-0c99-495a-8c19-7f4e45272a78","executionInfo":{"status":"ok","timestamp":1587951913671,"user_tz":420,"elapsed":3826856,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["# Preprocessing data\n","#final['Left'] = final['Left'].fillna(\"\")\n","print(1)\n","final['Left'] = [remove_punctuation(x) for x in final['Left']]# for x in final['Left']]#final['Left'].apply(lambda x: remove_punctuation(x))\n","#print(final['Left'])\n","print(2)\n","final['Left'] = [x.lower() for x in final['Left']]#final['Left'].apply(lambda x: tokenizer.tokenize(x.lower()))\n","#print(final['Left'])\n","\n","print(3)\n","final['Left'] = [remove_stopwords(x) for x in final['Left']]#final['Left'].apply(lambda x: remove_stopwords(x))\n","#print(final['Left'])\n","#\n","print(4)\n","final['Left'] = [word_lemmatizer(x) for x in final['Left']]#final['Left'].apply(lambda x: word_lemmatizer(x))\n","#print(final['Left'])\n","\n","print(5)\n","\n","print(1)\n","final['Right'] = [remove_punctuation(x) for x in final['Right']]#final['Left'].apply(lambda x: remove_punctuation(x))\n","print(2)\n","final['Right'] = [x.lower() for x in final['Right']]#final['Left'].apply(lambda x: tokenizer.tokenize(x.lower()))\n","print(3)\n","final['Right'] = [remove_stopwords(x) for x in final['Right']]#final['Left'].apply(lambda x: remove_stopwords(x))\n","print(4)\n","final['Right'] = [word_lemmatizer(x) for x in final['Right']]#final['Left'].apply(lambda x: word_lemmatizer(x))\n","print(5)\n","\n","print(1)\n","final['Center'] = [remove_punctuation(x) for x in final['Center']]#final['Left'].apply(lambda x: remove_punctuation(x))\n","print(2)\n","final['Center'] = [x.lower() for x in final['Center']]#final['Left'].apply(lambda x: tokenizer.tokenize(x.lower()))\n","print(3)\n","final['Center'] = [remove_stopwords(x) for x in final['Center']]#final['Left'].apply(lambda x: remove_stopwords(x))\n","print(4)\n","final['Center'] = [word_lemmatizer(x) for x in final['Center']]#final['Left'].apply(lambda x: word_lemmatizer(x))\n","print(5)"],"execution_count":29,"outputs":[{"output_type":"stream","text":["1\n","2\n","3\n","4\n","5\n","1\n","2\n","3\n","4\n","5\n","1\n","2\n","3\n","4\n","5\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"hJTdKAD1cT8L","colab_type":"code","colab":{}},"source":["final['Left'] = [word_stemmer(x) for x in final['Left']]\n","final['Right'] = [word_stemmer(x) for x in final['Right']]\n","final['Center'] = [word_stemmer(x) for x in final['Center']]\n","\n","#final['Left'] = remove_punctuation(final['Left'])\n","#final['Right'] = remove_punctuation(final['Right'])\n","#final['Center'] = remove_punctuation(final['Center'])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"HNqZzvFTY3th","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"1ead29c1-c635-4e17-9027-af5ab1bc6298","executionInfo":{"status":"ok","timestamp":1587953545978,"user_tz":420,"elapsed":395,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["final['Left'][0]"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['cnn',\n"," 'like',\n"," 'famili',\n"," 'biker',\n"," 'gang',\n"," 'tend',\n"," 'settl',\n"," 'score',\n"," 'among',\n"," 'privat',\n"," 'quietli',\n"," 'sunday',\n"," 'feud',\n"," 'two',\n"," 'rival',\n"," 'biker',\n"," 'group',\n"," 'bandido',\n"," 'cossack',\n"," 'broke',\n"," 'open',\n"," 'big',\n"," 'way',\n"," 'least',\n"," 'nine',\n"," 'peopl',\n"," 'kill',\n"," 'fight',\n"," 'erupt',\n"," 'waco',\n"," 'texa',\n"," 'restaur',\n"," 'clash',\n"," 'escal',\n"," 'minut',\n"," 'fist',\n"," 'gun',\n"," 'eighteen',\n"," 'peopl',\n"," 'hospit',\n"," 'accord',\n"," 'waco',\n"," 'polic',\n"," 'sgt',\n"," 'w',\n"," 'patrick',\n"," 'swanton',\n"," 'said',\n"," 'victim',\n"," 'biker',\n"," 'declin',\n"," 'name',\n"," 'gang',\n"," 'involv',\n"," 'photo',\n"," 'scene',\n"," 'show',\n"," 'biker',\n"," 'wear',\n"," 'insignia',\n"," 'cossack',\n"," 'bandido',\n"," 'scimitar',\n"," 'vaquero',\n"," 'accord',\n"," 'memo',\n"," 'sent',\n"," 'law',\n"," 'enforc',\n"," 'offic',\n"," 'wake',\n"," 'shoot',\n"," 'member',\n"," 'bandido',\n"," 'former',\n"," 'inform',\n"," 'infiltr',\n"," 'biker',\n"," 'club',\n"," 'beef',\n"," 'primarili',\n"," 'bandido',\n"," 'cossack',\n"," 'boil',\n"," 'territori',\n"," 'said',\n"," 'inform',\n"," 'go',\n"," 'name',\n"," 'charl',\n"," 'falco',\n"," 'bandido',\n"," 'biggest',\n"," 'motorcycl',\n"," 'gang',\n"," 'texa',\n"," 'dont',\n"," 'allow',\n"," 'motorcycl',\n"," 'gang',\n"," 'enter',\n"," 'state',\n"," 'allow',\n"," 'motorcycl',\n"," 'club',\n"," 'exist',\n"," 'theyr',\n"," 'allow',\n"," 'wear',\n"," 'state',\n"," 'bottom',\n"," 'rocker',\n"," 'face',\n"," 'onslaught',\n"," 'bandido',\n"," 'falco',\n"," 'told',\n"," 'cnn',\n"," 'sara',\n"," 'sidner',\n"," 'bottom',\n"," 'rocker',\n"," 'refer',\n"," 'state',\n"," 'name',\n"," 'back',\n"," 'biker',\n"," 'vest',\n"," 'accord',\n"," 'falco',\n"," 'indic',\n"," 'someon',\n"," 'well',\n"," 'claim',\n"," 'territori',\n"," 'club',\n"," 'cossack',\n"," 'decid',\n"," 'big',\n"," 'enough',\n"," 'go',\n"," 'ahead',\n"," 'wear',\n"," 'texa',\n"," 'bottom',\n"," 'rocker',\n"," 'basic',\n"," 'tell',\n"," 'bandido',\n"," 'theyr',\n"," 'readi',\n"," 'war',\n"," 'said',\n"," 'sunday',\n"," 'fight',\n"," 'falco',\n"," 'predict',\n"," 'make',\n"," 'matter',\n"," 'exponenti',\n"," 'wors',\n"," 'two',\n"," 'gang',\n"," 'definit',\n"," 'said',\n"," 'long',\n"," 'exist',\n"," 'war',\n"," 'bulletin',\n"," 'warn',\n"," 'potenti',\n"," 'war',\n"," 'potenti',\n"," 'appar',\n"," 'radar',\n"," 'texa',\n"," 'author',\n"," 'time',\n"," 'wfaa',\n"," 'news',\n"," 'station',\n"," 'worth',\n"," 'area',\n"," 'report',\n"," 'law',\n"," 'enforc',\n"," 'bulletin',\n"," 'may',\n"," '1',\n"," 'detail',\n"," 'grow',\n"," 'tension',\n"," 'bandido',\n"," 'cossack',\n"," 'violenc',\n"," 'member',\n"," 'bandido',\n"," 'omg',\n"," 'cossack',\n"," 'mc',\n"," 'increas',\n"," 'texa',\n"," 'indic',\n"," 'diminish',\n"," 'bulletin',\n"," 'read',\n"," 'conflict',\n"," 'may',\n"," 'stem',\n"," 'cossack',\n"," 'member',\n"," 'refus',\n"," 'pay',\n"," 'bandido',\n"," 'due',\n"," 'oper',\n"," 'texa',\n"," 'claim',\n"," 'texa',\n"," 'territori',\n"," 'wear',\n"," 'texa',\n"," 'bottom',\n"," 'rocker',\n"," 'vest',\n"," 'wfaa',\n"," 'report',\n"," 'bulletin',\n"," 'issu',\n"," 'texa',\n"," 'depart',\n"," 'public',\n"," 'safeti',\n"," 'declin',\n"," 'tell',\n"," 'cnn',\n"," 'whether',\n"," 'document',\n"," 'genuin',\n"," 'also',\n"," 'declin',\n"," 'provid',\n"," 'copi',\n"," 'bulletin',\n"," 'reportedli',\n"," 'said',\n"," 'offic',\n"," 'tri',\n"," 'reduc',\n"," 'tension',\n"," 'group',\n"," 'warn',\n"," 'unwant',\n"," 'attent',\n"," 'potenti',\n"," 'war',\n"," 'would',\n"," 'bring',\n"," 'detail',\n"," 'specif',\n"," 'moment',\n"," 'escal',\n"," 'rivalri',\n"," 'includ',\n"," '•',\n"," 'march',\n"," '22',\n"," 'approxim',\n"," '10',\n"," 'cossack',\n"," 'forc',\n"," 'bandido',\n"," 'pull',\n"," 'near',\n"," 'lorena',\n"," 'texa',\n"," 'attack',\n"," 'bandido',\n"," 'member',\n"," 'chain',\n"," 'baton',\n"," 'metal',\n"," 'pipe',\n"," 'steal',\n"," 'motorcycl',\n"," 'day',\n"," 'group',\n"," 'bandido',\n"," 'approach',\n"," 'cossack',\n"," 'truck',\n"," 'stop',\n"," 'palo',\n"," 'pinto',\n"," 'counti',\n"," 'cossack',\n"," 'member',\n"," 'attack',\n"," 'refus',\n"," 'remov',\n"," 'texa',\n"," 'patch',\n"," 'vest',\n"," '•',\n"," 'april',\n"," '7',\n"," 'fbi',\n"," 'receiv',\n"," 'inform',\n"," '100',\n"," 'bandido',\n"," 'plan',\n"," 'travel',\n"," 'odessa',\n"," 'texa',\n"," 'earli',\n"," 'april',\n"," 'start',\n"," 'war',\n"," 'cossack',\n"," '•',\n"," 'april',\n"," '24',\n"," 'fbi',\n"," 'releas',\n"," 'report',\n"," 'three',\n"," 'recent',\n"," 'fight',\n"," 'bandido',\n"," 'cossack',\n"," 'east',\n"," 'texa',\n"," 'go',\n"," 'back',\n"," 'littl',\n"," 'kid',\n"," 'your',\n"," 'play',\n"," 'king',\n"," 'hill',\n"," 'king',\n"," 'hill',\n"," 'texa',\n"," 'bandido',\n"," 'top',\n"," 'pile',\n"," 'everybodi',\n"," 'want',\n"," 'top',\n"," 'level',\n"," 'said',\n"," 'chri',\n"," 'omodt',\n"," 'former',\n"," 'cop',\n"," 'book',\n"," 'break',\n"," 'code',\n"," 'hell',\n"," 'angel',\n"," 'patch',\n"," 'wear',\n"," 'patch',\n"," 'state',\n"," 'base',\n"," 'period',\n"," 'said',\n"," 'countri',\n"," 'notori',\n"," 'biker',\n"," 'gang',\n"," 'gang',\n"," 'among',\n"," 'kill',\n"," 'sunday',\n"," 'one',\n"," 'member',\n"," 'bandido',\n"," 'accord',\n"," 'jimmi',\n"," 'graf',\n"," 'member',\n"," 'club',\n"," 'graf',\n"," 'say',\n"," 'he',\n"," 'awar',\n"," 'bandido',\n"," 'problem',\n"," 'cossack',\n"," 'evid',\n"," 'issu',\n"," 'cossack',\n"," 'want',\n"," 'outlaw',\n"," 'told',\n"," 'cnn',\n"," 'kyung',\n"," 'lah',\n"," 'u',\n"," 'justic',\n"," 'depart',\n"," 'character',\n"," 'bandido',\n"," 'grow',\n"," 'crimin',\n"," 'threat',\n"," 'least',\n"," '2',\n"," '000',\n"," 'member',\n"," '14',\n"," 'countri',\n"," 'say',\n"," 'gang',\n"," 'involv',\n"," 'product',\n"," 'transport',\n"," 'distribut',\n"," 'drug',\n"," 'justic',\n"," 'depart',\n"," 'synopsi',\n"," 'cossack',\n"," 'book',\n"," 'one',\n"," 'percent',\n"," 'encyclopedia',\n"," 'world',\n"," 'outlaw',\n"," 'motorcycl',\n"," 'club',\n"," 'abyss',\n"," 'ghost',\n"," 'zombi',\n"," 'elit',\n"," 'say',\n"," 'found',\n"," 'texa',\n"," '1969',\n"," 'major',\n"," 'presenc',\n"," 'australia',\n"," 'graf',\n"," 'took',\n"," 'seriou',\n"," 'issu',\n"," 'bandido',\n"," 'character',\n"," 'gang',\n"," 'motorcycl',\n"," 'club',\n"," 'websit',\n"," 'highlight',\n"," 'noncrimin',\n"," 'endeavor',\n"," 'easter',\n"," 'parti',\n"," 'germani',\n"," 'toy',\n"," 'drive',\n"," 'franc',\n"," 'gang',\n"," 'gang',\n"," 'thing',\n"," 'affili',\n"," 'gang',\n"," 'graf',\n"," 'said',\n"," 'didnt',\n"," 'noth',\n"," 'fight',\n"," 'right',\n"," 'theyr',\n"," 'say',\n"," 'lie',\n"," 'tv',\n"," 'tell',\n"," 'everybodi',\n"," 'bandido',\n"," 'polic',\n"," 'offic',\n"," 'that',\n"," 'never',\n"," 'histori',\n"," 'biker',\n"," 'gang',\n"," 'violenc']"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"LOiRJkXztP4t","colab_type":"code","colab":{}},"source":["#final['Left']# = final['Left'].split()\n","#final['Right'] = final['Right'].split()\n","#final['Center'] = final['Center'].split()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bVV49gQShuCX","colab_type":"code","colab":{}},"source":["#final['Left'] = [x for x in final['Left'] if len(x) > 0]\n","#final['Right'] = [x for x in final['Right'] if len(x) > 0]\n","#final['Center'] = [x for x in final['Center'] if len(x) > 0]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ymPbi60fq5cx","colab_type":"code","colab":{}},"source":["#final['Left'] = [[x[0].replace('”', '').replace('“', '').replace('.', '').replace(',', '')] for x in final['Left']]\n","#final['Right'] = [[x[0].replace('”', '').replace('“', '').replace('.', '').replace(',', '')] for x in final['Right']]\n","#final['Center'] = [[x[0].replace('”', '').replace('“', '').replace('.', '').replace(',', '')] for x in final['Center']]"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Dhogj_3xMTex","colab_type":"text"},"source":["### We are using Word2Vec with GenSim to map out and find similarity in different words. "]},{"cell_type":"code","metadata":{"id":"tQ1DDGAPMTe_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":579},"outputId":"2345bf8c-42fa-44ae-edb7-249e2b507e8f","executionInfo":{"status":"error","timestamp":1587953895823,"user_tz":420,"elapsed":5719,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["import gensim\n","\n","model_left = gensim.models.Word2Vec(final['Left'], size=50, window=5, min_count=2, iter = 10, workers=3)\n","model_right = gensim.models.Word2Vec(final['Right'], size=50, window=5, min_count=2, iter = 10, workers=3)\n","model_center = gensim.models.Word2Vec(final['Center'], size=50, window=5, min_count=2, iter = 10, workers=3)"],"execution_count":39,"outputs":[{"output_type":"error","ename":"KeyboardInterrupt","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-39-492155b82f5d>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgensim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mWord2Vec\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0mmodel_left\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgensim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mWord2Vec\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Left'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwindow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin_count\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mworkers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mmodel_right\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgensim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mWord2Vec\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Right'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwindow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin_count\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mworkers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mmodel_center\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mgensim\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mWord2Vec\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfinal\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'Center'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m50\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwindow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin_count\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0miter\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mworkers\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/gensim/models/word2vec.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, sentences, corpus_file, size, alpha, window, min_count, max_vocab_size, sample, seed, workers, min_alpha, sg, hs, negative, ns_exponent, cbow_mean, hashfxn, iter, null_word, trim_rule, sorted_vocab, batch_words, compute_loss, callbacks, max_final_vocab)\u001b[0m\n\u001b[1;32m    765\u001b[0m             \u001b[0mcallbacks\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcallbacks\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_words\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mbatch_words\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrim_rule\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrim_rule\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msg\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0malpha\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwindow\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mwindow\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    766\u001b[0m             \u001b[0mseed\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mseed\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mhs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnegative\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnegative\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcbow_mean\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcbow_mean\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin_alpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mmin_alpha\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcompute_loss\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcompute_loss\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 767\u001b[0;31m             fast_version=FAST_VERSION)\n\u001b[0m\u001b[1;32m    768\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    769\u001b[0m     def _do_train_epoch(self, corpus_file, thread_id, offset, cython_vocab, thread_private_mem, cur_epoch,\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/gensim/models/base_any2vec.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, sentences, corpus_file, workers, vector_size, epochs, callbacks, batch_words, trim_rule, sg, alpha, window, seed, hs, negative, ns_exponent, cbow_mean, min_alpha, compute_loss, fast_version, **kwargs)\u001b[0m\n\u001b[1;32m    757\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"You can't pass a generator as the sentences argument. Try an iterator.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    758\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 759\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbuild_vocab\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msentences\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msentences\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcorpus_file\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcorpus_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrim_rule\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtrim_rule\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    760\u001b[0m             self.train(\n\u001b[1;32m    761\u001b[0m                 \u001b[0msentences\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msentences\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcorpus_file\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcorpus_file\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtotal_examples\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorpus_count\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/gensim/models/base_any2vec.py\u001b[0m in \u001b[0;36mbuild_vocab\u001b[0;34m(self, sentences, corpus_file, update, progress_per, keep_raw_vocab, trim_rule, **kwargs)\u001b[0m\n\u001b[1;32m    941\u001b[0m             trim_rule=trim_rule, **kwargs)\n\u001b[1;32m    942\u001b[0m         \u001b[0mreport_values\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'memory'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mestimate_memory\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvocab_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mreport_values\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'num_retained_words'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 943\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrainables\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mprepare_weights\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnegative\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwv\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mupdate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mupdate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvocabulary\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvocabulary\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    944\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    945\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mbuild_vocab_from_freq\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mword_freq\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkeep_raw_vocab\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcorpus_count\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtrim_rule\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mupdate\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/gensim/models/word2vec.py\u001b[0m in \u001b[0;36mprepare_weights\u001b[0;34m(self, hs, negative, wv, update, vocabulary)\u001b[0m\n\u001b[1;32m   1820\u001b[0m         \u001b[0;31m# set initial input/projection and hidden weights\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1821\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mupdate\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1822\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreset_weights\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnegative\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1823\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1824\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mupdate_weights\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnegative\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwv\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/gensim/models/word2vec.py\u001b[0m in \u001b[0;36mreset_weights\u001b[0;34m(self, hs, negative, wv)\u001b[0m\n\u001b[1;32m   1837\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mxrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvocab\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1838\u001b[0m             \u001b[0;31m# construct deterministic seed from word AND seed argument\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1839\u001b[0;31m             \u001b[0mwv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvectors\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mseeded_vector\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex2word\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mseed\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mwv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvector_size\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1840\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mhs\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1841\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msyn1\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mzeros\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mwv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvocab\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayer1_size\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mREAL\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/gensim/models/word2vec.py\u001b[0m in \u001b[0;36mseeded_vector\u001b[0;34m(self, seed_string, vector_size)\u001b[0m\n\u001b[1;32m   1827\u001b[0m         \u001b[0;34m\"\"\"Get a random vector (but deterministic by seed_string).\"\"\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1828\u001b[0m         \u001b[0;31m# Note: built-in hash() may vary by Python version or even (in Py3.x) per launch\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1829\u001b[0;31m         \u001b[0monce\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mRandomState\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhashfxn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mseed_string\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m&\u001b[0m \u001b[0;36m0xffffffff\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1830\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0monce\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrand\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvector_size\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m/\u001b[0m \u001b[0mvector_size\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1831\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mmtrand.pyx\u001b[0m in \u001b[0;36mnumpy.random.mtrand.RandomState.__init__\u001b[0;34m()\u001b[0m\n","\u001b[0;32m_mt19937.pyx\u001b[0m in \u001b[0;36mnumpy.random._mt19937.MT19937.__init__\u001b[0;34m()\u001b[0m\n","\u001b[0;32m_bit_generator.pyx\u001b[0m in \u001b[0;36mnumpy.random._bit_generator.BitGenerator.__init__\u001b[0;34m()\u001b[0m\n","\u001b[0;32m_bit_generator.pyx\u001b[0m in \u001b[0;36mnumpy.random._bit_generator.SeedSequence.__init__\u001b[0;34m()\u001b[0m\n","\u001b[0;32m_bit_generator.pyx\u001b[0m in \u001b[0;36mnumpy.random._bit_generator.SeedSequence.get_assembled_entropy\u001b[0;34m()\u001b[0m\n","\u001b[0;32m<__array_function__ internals>\u001b[0m in \u001b[0;36mconcatenate\u001b[0;34m(*args, **kwargs)\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]},{"cell_type":"code","metadata":{"id":"ESVsfd_Hwomd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"outputId":"d1248b2c-7d48-48bc-b57b-a15e6dd98e54","executionInfo":{"status":"ok","timestamp":1587953976740,"user_tz":420,"elapsed":2355,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["from gensim.models import Word2Vec\n","\n","model_left = Word2Vec.load(\"final_left.model\")\n","model_right = Word2Vec.load(\"final_right.model\")\n","model_center = Word2Vec.load(\"final_center.model\")\n","#model_left.save(\"final_left.model\")\n","#model_right.save(\"final_right.model\")\n","#model_center.save(\"final_center.model\")"],"execution_count":41,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/smart_open/smart_open_lib.py:253: UserWarning: This function is deprecated, use smart_open.open instead. See the migration notes for details: https://github.com/RaRe-Technologies/smart_open/blob/master/README.rst#migrating-to-the-new-open-function\n","  'See the migration notes for details: %s' % _MIGRATION_NOTES_URL\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"8xPZ0nHEMTfB","colab_type":"code","outputId":"45ccc2f0-0c06-4f0f-9880-a2ca824d226f","executionInfo":{"status":"ok","timestamp":1587954086599,"user_tz":420,"elapsed":401,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":717}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('immigrant', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('immigrant', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('immigrant', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":44,"outputs":[{"output_type":"stream","text":["undocumented\n","unauthorized\n","deporting\n","dreamer\n","muslim\n","deportation\n","deport\n","immigration\n","illegally\n","migrant\n","latino\n","refugee\n","***************\n","alien\n","undocumented\n","illegals\n","deport\n","foreigner\n","immigration\n","illegal\n","illegally\n","deportation\n","overstayed\n","citizenship\n","visa\n","***************\n","undocumented\n","deporting\n","illegally\n","citizenship\n","muslim\n","migrant\n","refugee\n","deportation\n","foreigner\n","asylum\n","citizen\n","illegal\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"T1ZgR1udEawR","colab_type":"text"},"source":[""]},{"cell_type":"code","metadata":{"id":"A88tBek0MTfE","colab_type":"code","outputId":"165f1e63-71c3-4519-d13e-3d229fc8b0b4","executionInfo":{"status":"ok","timestamp":1587954237080,"user_tz":420,"elapsed":527,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":717}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('terrorist', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('terrorist', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('terrorist', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":45,"outputs":[{"output_type":"stream","text":["terror\n","jihadist\n","terrorism\n","isi\n","extremist\n","militant\n","islamist\n","jihadi\n","jihadis\n","homegrown\n","perpetrator\n","attack\n","***************\n","terror\n","terrorism\n","jihadist\n","isi\n","extremist\n","islamist\n","jihadi\n","isil\n","hezbollah\n","militant\n","caliphate\n","jihadis\n","***************\n","terror\n","terrorism\n","isi\n","extremist\n","islamist\n","jihadist\n","attack\n","militant\n","suspected\n","radicalized\n","pkk\n","daesh\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"qb1rCYnZsC9P","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"f63485da-2021-4083-de7d-55e7e19ee602","executionInfo":{"status":"ok","timestamp":1587954245981,"user_tz":420,"elapsed":493,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('muslim', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('muslim', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('muslim', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":46,"outputs":[{"output_type":"stream","text":["islam\n","immigrant\n","brotherhood\n","rohingya\n","jew\n","religion\n","persecuted\n","terrorist\n","foreigner\n","refugee\n","deporting\n","nationality\n","***************\n","persecuted\n","adherent\n","christian\n","islam\n","refugee\n","imam\n","sharia\n","brotherhood\n","sunni\n","apostate\n","cordoba\n","extremist\n","***************\n","immigrant\n","jew\n","islam\n","brotherhood\n","christian\n","sunni\n","foreigner\n","religious\n","cleric\n","terrorist\n","christianity\n","undocumented\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"1NBa4zCUsFsM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"4f55b6d9-48f7-44e0-c497-e570cb0179e4","executionInfo":{"status":"ok","timestamp":1587955160400,"user_tz":420,"elapsed":398,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('obama', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('obama', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('obama', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":56,"outputs":[{"output_type":"stream","text":["obamas\n","kitesurf\n","trump\n","bush\n","incoming\n","reagan\n","clinton\n","husayn\n","rhee\n","bashar\n","unfit\n","elect\n","***************\n","obamas\n","incoming\n","bush\n","curtailment\n","lifesaver\n","reagan\n","musharraf\n","ivanov\n","boomeranga\n","trump\n","marshaling\n","intemperate\n","***************\n","obamas\n","trump\n","incoming\n","bush\n","reagan\n","clinton\n","45th\n","bashar\n","eisenhower\n","barack\n","congress\n","previous\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"96EgVY1GsOO9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"40ed3707-eb20-4d86-a633-753cadb4d3fe","executionInfo":{"status":"ok","timestamp":1587954253150,"user_tz":420,"elapsed":1662,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('liberal', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('liberal', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('liberal', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":48,"outputs":[{"output_type":"stream","text":["conservative\n","progressive\n","libertarian\n","mainstream\n","centrist\n","socialist\n","populist\n","politician\n","leftist\n","ideological\n","pandering\n","rightwing\n","***************\n","progressive\n","leftist\n","conservative\n","elite\n","politician\n","pundit\n","principled\n","disaffected\n","mainstream\n","cabal\n","biased\n","reformer\n","***************\n","conservative\n","reformer\n","mainstream\n","evangelicals\n","orthodoxy\n","ideologically\n","progressivism\n","progressive\n","populist\n","liberalism\n","evangelical\n","centrist\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"JycTbg-hsRXQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"96012fbb-5c39-4787-c286-a7d00aab440a","executionInfo":{"status":"ok","timestamp":1587955600832,"user_tz":420,"elapsed":333,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('mexico', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('mexico', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('mexico', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":63,"outputs":[{"output_type":"stream","text":["border\n","crossers\n","mexican\n","nafta\n","tariff\n","lao\n","foretold\n","canada\n","bellicosity\n","abroad\n","gulf\n","philippine\n","***************\n","mexican\n","border\n","balkan\n","entrant\n","illegally\n","honduras\n","construction\n","india\n","zealand\n","guatemala\n","illegals\n","illegal\n","***************\n","mexican\n","offshoring\n","remittance\n","nafta\n","sanctuary\n","border\n","baja\n","nav\n","peña\n","chiapas\n","enrique\n","aujla\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"dwXhByzlsgNk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"abcb7258-9f58-4f50-910c-b095147cfaeb","executionInfo":{"status":"ok","timestamp":1587954257050,"user_tz":420,"elapsed":791,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('gun', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('gun', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('gun', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":50,"outputs":[{"output_type":"stream","text":["firearm\n","handgun\n","airsoft\n","stun\n","rifle\n","m1911\n","cop\n","holster\n","ammunition\n","bullet\n","concealed\n","sterling\n","***************\n","nra\n","firearm\n","handgun\n","rifle\n","awr\n","controller\n","ammunition\n","background\n","suppressor\n","concealed\n","stun\n","semiautomatic\n","***************\n","firearm\n","everytown\n","rifle\n","handgun\n","uzi\n","stun\n","cop\n","concealed\n","pistol\n","intimidation\n","taser\n","smoking\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"nIgP0s9ys5Pl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"7a76846d-9856-43c7-efda-85b2edbd5243","executionInfo":{"status":"ok","timestamp":1587954260032,"user_tz":420,"elapsed":712,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('marijuana', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('marijuana', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('marijuana', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":51,"outputs":[{"output_type":"stream","text":["recreational\n","cannabis\n","legalization\n","pot\n","cocaine\n","legalizing\n","drug\n","legalized\n","naloxone\n","opioids\n","heroin\n","alcohol\n","***************\n","heroin\n","methamphetamine\n","cocaine\n","alcohol\n","painkiller\n","antibiotic\n","fentanyl\n","quantity\n","drug\n","tissue\n","injection\n","cigarette\n","***************\n","recreational\n","cannabis\n","tobacco\n","smoking\n","alcohol\n","opioids\n","karisa\n","legalization\n","fentanyl\n","antiretroviral\n","prescription\n","legalized\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"NX5ee4uQtC2R","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"ab7aeafe-ebda-43d0-d641-632256e096cd","executionInfo":{"status":"ok","timestamp":1587954262641,"user_tz":420,"elapsed":568,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('abortion', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('abortion', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('abortion', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":52,"outputs":[{"output_type":"stream","text":["contraception\n","marriage\n","legalization\n","pregnancy\n","transgender\n","hellerstedt\n","reproductive\n","outlaw\n","legalizing\n","contraceptive\n","provision\n","constitutionalizing\n","***************\n","marriage\n","pregnancy\n","trimester\n","parenthood\n","unborn\n","mammogram\n","contraception\n","reproductive\n","clinic\n","adoption\n","germline\n","legalized\n","***************\n","contraception\n","transgender\n","marriage\n","legalized\n","contraceptive\n","sterilization\n","pregnancy\n","medically\n","exemption\n","parenthood\n","reproductive\n","hb2\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"yRQZELEOtQon","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"74758d56-5614-4b19-f318-5038df62c434","executionInfo":{"status":"ok","timestamp":1587954274416,"user_tz":420,"elapsed":382,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('clinton', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('clinton', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('clinton', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":55,"outputs":[{"output_type":"stream","text":["‘crooked\n","sander\n","crooked\n","clintoned\n","trump\n","delrayser\n","obama\n","kaine\n","romney\n","yaaas\n","obamas\n","bush\n","***************\n","crooked\n","frontrunning\n","unlikeable\n","sander\n","rodham\n","hillary\n","trump\n","surrogate\n","predation\n","amplifies\n","broaddrick\n","‘lies\n","***************\n","crooked\n","sander\n","trump\n","hillary\n","candidacy\n","throttled\n","overeagerness\n","republican\n","superdelegates\n","cruz\n","gop\n","bush\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"OY8chqN2tbPZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"42e1192d-3012-46d2-bb42-2845c96993ec","executionInfo":{"status":"ok","timestamp":1587955340140,"user_tz":420,"elapsed":463,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('trump', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('trump', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('trump', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":57,"outputs":[{"output_type":"stream","text":["obama\n","obamas\n","incoming\n","penny\n","clinton\n","conway\n","candidacy\n","christie\n","donald\n","bannon\n","bush\n","spicer\n","***************\n","candidacy\n","cruz\n","rubio\n","gop\n","trail\n","sander\n","ayottes\n","penny\n","unqualified\n","frontrunner\n","presidential\n","cruzs\n","***************\n","obama\n","clinton\n","republican\n","obamas\n","gop\n","rhetoric\n","incoming\n","candidacy\n","presidential\n","presidency\n","campaign\n","nevertheless\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"n-ZpPonwg7QK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":717},"outputId":"be0cb971-de16-4406-9f94-55bc49f03d3e","executionInfo":{"status":"ok","timestamp":1587955395885,"user_tz":420,"elapsed":735,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}}},"source":["left_pred = ([i[0] for i in model_left.wv.most_similar('president', topn = 12)])\n","right_pred = ([i[0] for i in model_right.wv.most_similar('president', topn = 12)])\n","center_pred = ([i[0] for i in model_center.wv.most_similar('president', topn = 12)])\n","for i in range(12):\n","  print(left_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(right_pred[i])\n","print(\"***************\")\n","for i in range(12):\n","  print(center_pred[i])"],"execution_count":59,"outputs":[{"output_type":"stream","text":["presidency\n","versa\n","barack\n","administration\n","successor\n","penny\n","biden\n","presidential\n","veto\n","governor\n","predecessor\n","ambassador\n","***************\n","versa\n","administration\n","barack\n","presidency\n","penny\n","presidential\n","pres\n","biden\n","democratically\n","successor\n","‘son\n","abstain\n","***************\n","presidency\n","administration\n","versa\n","barack\n","biden\n","successor\n","penny\n","oval\n","presidential\n","rapprochement\n","elected\n","predecessor\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"j80_MTpJMTfH","colab_type":"code","outputId":"c2d89d82-bfaf-40c5-a07d-aa4bcefe0553","executionInfo":{"status":"ok","timestamp":1586056846310,"user_tz":420,"elapsed":575,"user":{"displayName":"Anshul Shah","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjOYCk-Fo3VrZynEPXJ8WlOhZTtA2nxOCGIxdbUlw=s64","userId":"05329260655318857564"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"source":["model.wv.most_similar('bias')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/gensim/matutils.py:737: FutureWarning: Conversion of the second argument of issubdtype from `int` to `np.signedinteger` is deprecated. In future, it will be treated as `np.int64 == np.dtype(int).type`.\n","  if np.issubdtype(vec.dtype, np.int):\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["[('flat', 0.9939834475517273),\n"," ('loans', 0.9939540028572083),\n"," ('Yahoo’s', 0.9935863614082336),\n"," ('graduation', 0.993577778339386),\n"," ('complaints', 0.9935342073440552),\n"," ('training', 0.9935142993927002),\n"," ('texts', 0.9934617280960083),\n"," ('cats', 0.9934274554252625),\n"," ('alien', 0.993217945098877),\n"," ('campuses', 0.9931556582450867)]"]},"metadata":{"tags":[]},"execution_count":76}]}]}